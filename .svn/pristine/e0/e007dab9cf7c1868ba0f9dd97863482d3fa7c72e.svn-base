//  PSArrayTable.m//  IPNetMonitorX////  Created by Peter Sichel on Mon Nov 10 2003.//  Copyright (c) 2003 Sustainable Softworks, Inc. All rights reserved.////	Delegate and data source for Array table.//  Dynamic table implemented with NSArray//  Allows fast insert and remove.#import <Cocoa/Cocoa.h>@class TableEntry;@class IPLookupController;@interface PSArrayTable : NSObject{    NSMutableArray*		tableArray;	id  delegate;}- (id)init;- (void)dealloc;- (id)delegate;- (void)setDelegate:(id)value;- (void)updateTable:(NSString *)tableName;// save and restore- (NSMutableArray *)tableArray;- (void)setTableArray:(NSMutableArray *)value;- (NSMutableArray *)arrayOfDictionaries;- (BOOL)loadArrayOfDictionaries:(NSArray *)inArray forEntryClass:(Class)class;- (unsigned)count;// access- (id)objectAtIndex:(unsigned)row;    // get object value from Table data array for specified index.    // Return nil if index is beyond end of array.- (BOOL)removeObjectAtIndex:(int)index;- (void)removeObject:(id)anObject;- (void)removeAllObjects;- (int)addObject:(id)entry;    // add an object to the end of the Table data array    // return its row index;- (BOOL)replaceObjectAtIndex:(int)index withObject:(id)object;    // replace object for specified index    // return NO if index is beyond end of array+1- (BOOL)insertObject:(id)anObject atIndex:(unsigned)index;    // insert object at specified index    // return NO if index is beyond end of array+1- (unsigned)indexOfObject:(id)anObject;#pragma mark -- dictionary access --// key value coding- (NSMutableDictionary *)tableDictionary;- (void)setTableDictionary:(NSMutableDictionary *)value;// save and restore- (NSDictionary *)dictionaryOfDictionaries;- (BOOL)loadDictionaryOfDictionaries:(NSDictionary *)inDictionary forEntryClass:(Class)class;//entry access- (id)valueForKey:(id)key;  // support key-value coding- (id)objectForKey:(id)key;- (id)objectForKeyInt:(u_int32_t)keyInt;- (unsigned)setObject:(id)anObject forKey:(id)key;- (unsigned)setObject:(id)anObject forKeyInt:(u_int32_t)keyInt;- (void)removeObjectForKey:(id)key;- (void)removeObjectForKeyInt:(u_int32_t)keyInt;// data source- (int)numberOfRowsInTableView:(NSTableView *)tableView;- (id)tableView:(NSTableView *)tableView        objectValueForTableColumn:(NSTableColumn *)tableColumn        row:(int)row;// <NSCoding>- (void)encodeWithCoder:(NSCoder *)coder;- (id)initWithCoder:(NSCoder *)coder;// <NSCopying>- (id)copyWithZone:(NSZone *)zone;@end#define kNullObject @"*NULL*"