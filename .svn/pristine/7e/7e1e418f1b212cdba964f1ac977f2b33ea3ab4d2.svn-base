////  PSStateEntry.m//  IPNetSentryX////  Created by Peter Sichel on Thu May 01 2003.//  Copyright (c) 2003 Sustainable Softworks, Inc. All rights reserved.//#import "PSStateEntry.h"@implementation PSStateEntry// ---------------------------------------------------------------------------------//	¥ init// ---------------------------------------------------------------------------------- (id)init{    if (self = [super init]) {        // initialize our instance variables        nodeDictionary = [[NSMutableDictionary alloc] initWithCapacity:10];        if (!nodeDictionary) return nil;    }    return self;}// ---------------------------------------------------------------------------------//	¥ dealloc// ---------------------------------------------------------------------------------- (void) dealloc {    [self setNodeDictionary:nil];    [super dealloc];}// Access node dictionary- (NSMutableDictionary *)nodeDictionary { return nodeDictionary; };- (void)setNodeDictionary:(NSMutableDictionary *)value {    [value retain];    [nodeDictionary release];    nodeDictionary = value;}+ (id)entryFromDictionary:(NSDictionary *)entryDictionary {	PSStateEntry* entry;	entry = [[[PSStateEntry alloc] init] autorelease];	[entry setNodeDictionary:[NSMutableDictionary dictionaryWithDictionary:entryDictionary]];	return entry;}- (NSString *)description{	return [nodeDictionary description];}#if 0// do not include these because subclasses might have calculated access methods for objects not in nodeDictionary// and we want to use NSObject key-value coding#pragma mark --- Accessors ---- (id)valueForKey:(id)key{	return [nodeDictionary valueForKey:key];}- (void)takeValue:(id)value key:(id)key{	[nodeDictionary takeValue:value forKey:key];}#endif#pragma mark -- comparisons --- (id)key{	NSLog(@"PSStateEntry: override key for subclass");	return nil;}- (u_int32_t)keyInt{	NSLog(@"PSStateEntry: override keyInt for subclass");	return 0;}- (NSComparisonResult)compareKey:(id)key{//	u_int32_t ta = ipForString([self key]);//	u_int32_t tb = ipForString(key);//	//	if (ta > tb) return NSOrderedDescending;//	else if (ta < tb) return NSOrderedAscending;//	return NSOrderedSame;	NSLog(@"PSStateEntry: override compareKey for subclass");	return -1;}- (NSComparisonResult)compareKeyInt:(u_int32_t)key{	NSLog(@"PSStateEntry: override compareKey for subclass");	return -1;}// others to be provided by subclass#pragma mark --- CODING_AND_COPYING ---// <NSCoding>- (void)encodeWithCoder:(NSCoder *)coder{    [coder encodeObject:nodeDictionary];    return;}- (id)initWithCoder:(NSCoder *)coder{    self = [super init];	nodeDictionary = [[coder decodeObject] retain];    return self;}// tell the PortCoder not to use a proxy- (id)replacementObjectForPortCoder:(NSPortCoder *)encoder {    return self;}// <NSCopying>- (id)copyWithZone:(NSZone *)zone {    PSStateEntry *copy;	copy = [[[self class] allocWithZone:zone] init];    [copy setNodeDictionary:nodeDictionary];    return copy;}@end