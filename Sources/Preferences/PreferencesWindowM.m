#import "PreferencesWindowM.h"#import "PreferencesController.h"#import "PSSharedDictionary.h"#import "PSSupport.h"@implementation PreferencesWindowM- (IBAction)showWindow:(id)sender{    PreferencesController *preferencesController;    NSEnumerator* en;    NSWindow* window;    // Only one preferences window    // check if it already exists, if so bring to front, else create it    en = [[NSApp windows] objectEnumerator];    while (window = [en nextObject]) {        if ([[window delegate] isKindOfClass:[PreferencesController class]]) break;    }    if (window) {        [window makeKeyAndOrderFront:sender];    }    else {        // create window controller and make it the windows owner        preferencesController = [PreferencesController alloc];        preferencesController = [preferencesController            initWithWindowNibName:kPreferencesName owner:preferencesController];        if (preferencesController) {            [[preferencesController window] setFrameUsingName:kPreferencesName];            [[preferencesController window] makeKeyAndOrderFront:sender];        }		[preferencesController autorelease];    }}// count number of open windows- (unsigned)count{    NSEnumerator* en;    NSWindow* window;    int count = 0;    // count how many we have so far    en = [[NSApp windows] objectEnumerator];    while (window = [en nextObject]) {        if ([[window delegate] isKindOfClass:[PreferencesController class]]) count += 1;    }    return count;}// close open windows and return how many we found- (int)closeAll{    NSEnumerator* en;    NSWindow* window;    int count = 0;    // count how many we have so far    en = [[NSApp windows] objectEnumerator];    while (window = [en nextObject]) {        if ([[window delegate] isKindOfClass:[PreferencesController class]]) {            count += 1;            [[PSSharedDictionary sharedInstance] setObject:[NSNumber numberWithInt:count] forKey:@"instanceCount"];            [window close];        }    }    return count;}@end