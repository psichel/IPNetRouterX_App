#import "AlertPanelDelegate.h"#import "AlertPanelController.h"@implementation AlertPanelDelegate+ (AlertPanelDelegate *)sharedInstance {	static id sharedTask = nil;		if(sharedTask==nil) {		sharedTask = [[AlertPanelDelegate alloc] init];	}	return sharedTask;}- (id) init {    if (self = [super init]) {        mAlertPanelController = nil;    }    return self;}- (IBAction)showWindow:(id)sender{    NSEnumerator* en;    NSWindow* window;    // Only one Alert Panel list window    // check if it already exists, if so bring to front, else create it    en = [[NSApp windows] objectEnumerator];    while (window = [en nextObject]) {        if ([[window delegate] isKindOfClass:[AlertPanelController class]]) break;    }    if (window) {        [window makeKeyAndOrderFront:sender];    }    else {        // create window controller and make it the windows owner        mAlertPanelController = [AlertPanelController alloc];        mAlertPanelController = [mAlertPanelController            initWithWindowNibName:kAlertPanelName owner:mAlertPanelController];        if (mAlertPanelController) {            [[mAlertPanelController window] setFrameUsingName:kAlertPanelName];            [[mAlertPanelController window] makeKeyAndOrderFront:sender];        }    }}// count number of open windows- (unsigned)count{    NSEnumerator* en;    NSWindow* window;    int count = 0;    // count how many we have so far    en = [[NSApp windows] objectEnumerator];    while (window = [en nextObject]) {        if ([[window delegate] isKindOfClass:[AlertPanelController class]]) count += 1;    }    return count;}// close open windows and return how many we found- (int)closeAll{    NSEnumerator* en;    NSWindow* window;    int count = 0;    // count how many we have so far    en = [[NSApp windows] objectEnumerator];    while (window = [en nextObject]) {        if ([[window delegate] isKindOfClass:[AlertPanelController class]]) {            count += 1;            [window close];        }    }    return count;}- (AlertPanelController *)controller { return mAlertPanelController; }@end